<?php
/**
 * @file
 * CiviCRM Cron Module
 */
 
/**
 * Implementation of hook_menu().
 */
function civicrm_cron_menu() {
  $items = array();

  $items['admin/config/civicrm/civicrm-cron'] = array(
    'title' => 'CiviCRM Cron Configuration',
    'description' => 'Settings to call CiviCRM\'s cron from Drupal\'s cron.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('civicrm_cron_admin_settings'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['civicrm-cron/passthrough'] = array(
    'title' => 'CiviCRM Cron Passthrough',
    'description' => 'Runs CiviCRM\'s cron within Drupal passing the site key as CiviCRM expects',
    'page callback' => 'civicrm_cron_passthrough',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Builds the civicrm_cron admininstration settings form.
 */
function civicrm_cron_admin_settings($form, &$form_state) {
  $form = array();
  
  
  if (!civicrm_initialize()) {
    drupal_set_message(t('Failed to initialize CiviCRM'), 'error');
    return;
  }
  
  $cron_values['key'] = variable_get('civicrm_cron_sitekey', NULL);
  
  if (empty($form_state['input']['civicrm_cron_sitekey']) && $cron_values['key'] != NULL) {
    global $base_url;

    $path = 'civicrm-cron/passthrough';    
    $url = $base_url . url($path, array('query' => $cron_values));
  
    if ($url) {
      $result = drupal_http_request($url);
      //look for the CiviCRM error in response... successful processing returns nothing
      if ($result->data) {
        drupal_set_message($result->data, 'error');
      } else {
        drupal_set_message(t('CiviCRM Cron Successfully Run'));
      }
    }
  }

  //http://wiki.civicrm.org/confluence/display/CRMDOC41/Command-line+Script+Configuration
  
  //if it's still NULL at this point, set to site key constant
  if ($cron_values['key'] == NULL ) {
    $cron_values['key'] = CIVICRM_SITE_KEY;
    if (empty($form_state['input']['civicrm_cron_sitekey'])) {
      drupal_set_message(t('Save the Configuration to Test CiviCRM Cron'), 'warning');
    }
  }
      
  $form['civicrm_cron_sitekey'] = array(
    '#type' => 'textfield',
    '#title' => t('Sitekey'),
    '#default_value' => $cron_values['key'],
    '#description' => t('Must match the sitekey found in the civicrm-settings.php file.  Leave this field empty to attempt to lookup the current site key.'),
  );
    
  return system_settings_form($form);
}

/**
 * Implementation of hook_cron().
 */
function civicrm_cron_cron() {
 
  //$cron_values['name'] = variable_get('civicrm_cron_username', NULL);
  //$cron_values['pass'] = variable_get('civicrm_cron_password', NULL);
  $cron_values['key'] = variable_get('civicrm_cron_sitekey', NULL);
  
  //$url = civicrm_cron_get_url($cron_values);
  global $base_url;

  $path = 'civicrm-cron/passthrough';    
  $url = $base_url . url($path, array('query' => $cron_values));
  
  if ($url) {
    $result = drupal_http_request($url);
    //look for the CiviCRM error in response... successful processing returns nothing
    if ($result->data) {
      watchdog('civirm_cron', $result->data, NULL, WATCHDOG_ERROR);
    } else {
      watchdog('civirm_cron', t('CiviCRM Cron Successfully Run'), NULL, WATCHDOG_NOTICE);
    }
  }
  

}


function civicrm_cron_passthrough() {

  if (!civicrm_initialize()) {
    //watchdog('civirm_cron', t('Failed to initialize CiviCRM during Cron'), NULL, WATCHDOG_ERROR);
    return t('Failed to initialize CiviCRM during Cron');
  }
  
  CRM_Utils_System::authenticateScript(FALSE);

  require_once 'CRM/Core/JobManager.php';
  $facility = new CRM_Core_JobManager(FALSE);
 
  $facility->execute();
  
}

function civicrm_cron_get_url($cron_values) {
  if ($cron_values['name'] && $cron_values['pass'] && $cron_values['key']) {
    global $base_url;
    $civicrm_path = drupal_get_path('module', 'civicrm');
    //remove the last occurrence of 'drupal' from path
    $pos = strrpos($civicrm_path, 'drupal');

    if ($pos !== false) {
      $civicrm_path = substr_replace($civicrm_path, '', $pos, strlen($civicrm_path));
    }

    $url = $civicrm_path . 'bin/cron.php';
    
    return $base_url . url($url, array('query' => $cron_values));
    
  }
  
  return FALSE; 
}